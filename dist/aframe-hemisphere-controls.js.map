{"version":3,"file":"aframe-hemisphere-controls.js","sources":["../src/aframe-hemisphere-controls.ts","../src/THREE-OrbitControls.js"],"sourcesContent":["import './THREE-OrbitControls.js'\n\ndeclare const AFRAME:any, THREE:any\n\ndelete AFRAME.components['hemisphere-controls']\n\nAFRAME.registerComponent('hemisphere-controls', {\n  dependencies: ['camera','vr-mode-ui','look-controls'],\n  schema: {\n    'position': { type:'vec3', default:{ x:0,y:1,z:4 } },\n    'target':   { type:'vec3', default:{ x:0,y:0,z:0 } }\n  },\n\n/**** init ****/\n\n  init: function ():void {\n    this.el.sceneEl.setAttribute('vr-mode-ui',   'enabled',false)  // disable VR\n    this.el.sceneEl.setAttribute('look-controls','enabled',false)   // important\n\n    this.Camera        = this.el.getObject3D('camera')\n    this.OrbitControls = new THREE.OrbitControls(\n      this.Camera, this.el.sceneEl.renderer.domElement\n    )\n\n    Object.assign(this.OrbitControls, {\n      enableKeys:false, enablePan:false, enableZoom:false,\n      minPolarAngle:Math.PI/180*1, maxPolarAngle:Math.PI/180*89\n    })            // reduced limits avoid \"strange\" behaviour when reaching them\n\n    this.KeyEventListener = KeyEventListener.bind(this)\n  },\n\n/**** update ****/\n\n  update: function (oldData:any):void {\n    if (\n      (oldData == null) || (oldData.position == null) ||\n      ! oldData.position.equals(this.data.position)\n    ) {\n      this.Camera.position.copy(this.data.position)\n    }\n\n    if (\n      (oldData == null) || (oldData.target == null) ||\n      ! oldData.target.equals(this.data.target)\n    ) {\n      this.OrbitControls.target.copy(this.data.target)\n    }\n\n    this.OrbitControls.update()\n  },\n\n/**** play/pause ****/\n\n  play:  function ():void {\n    this.el.sceneEl.style.cursor = 'grab'            // visual feedback for user\n    startEventHandlingFor(this)\n  },\n\n  pause: function ():void {\n    this.el.sceneEl.style.cursor = 'auto'            // visual feedback for user\n    stopEventHandlingFor(this)\n  },\n\n/**** remove ****/\n\n  remove: function ():void {\n    this.OrbitControls.reset()\n    this.OrbitControls.dispose()\n  }\n})\n\n/**** startEventHandlingFor ****/\n\n  function startEventHandlingFor (Component:any):void {\n    window.addEventListener('keydown',Component.KeyEventListener)\n  }\n\n/**** stopEventHandlingFor ****/\n\n  function stopEventHandlingFor (Component:any):void {\n    window.removeEventListener('keydown',Component.KeyEventListener)\n  }\n\n/**** KeyEventListener ****/\n\n  function KeyEventListener (this:any, Event:any):void {\n    let Orbiter = this.OrbitControls\n    let Delta   = Math.PI/180\n\n    switch (Event.key) {\n      case 'Home':\n        this.Camera.position.copy(this.data.position)\n        Orbiter.update()\n        break\n\n      case 'ArrowLeft':  rotateBy( (Event.shiftKey ? 10 : 1)*Delta,0); break\n      case 'ArrowRight': rotateBy(-(Event.shiftKey ? 10 : 1)*Delta,0); break\n      case 'ArrowUp':    rotateBy(0, (Event.shiftKey ? 10 : 1)*Delta); break\n      case 'ArrowDown':  rotateBy(0,-(Event.shiftKey ? 10 : 1)*Delta); break\n\n      case 'a': rotateBy( Delta,0); break\n      case 'd': rotateBy(-Delta,0); break\n      case 'w': rotateBy(0, Delta); break\n      case 's': rotateBy(0,-Delta); break\n\n      case 'A': rotateBy( 10*Delta,0); break\n      case 'D': rotateBy(-10*Delta,0); break\n      case 'W': rotateBy(0, 10*Delta); break\n      case 'S': rotateBy(0,-10*Delta); break\n    }\n\n  /**** rotateBy - weird approach, but OrbitControls have no setters ****/\n\n    function rotateBy (\n      horizontalAngle:number, verticalAngle:number\n    ):void {\n      let { minAzimuthAngle,maxAzimuthAngle, minPolarAngle,maxPolarAngle } = Orbiter\n        Orbiter.minAzimuthAngle = Orbiter.maxAzimuthAngle\n          = Orbiter.getAzimuthalAngle() + horizontalAngle\n        Orbiter.minPolarAngle = Orbiter.maxPolarAngle\n          = Orbiter.getPolarAngle() + verticalAngle\n        Orbiter.update()\n      Object.assign(Orbiter,{ minAzimuthAngle,maxAzimuthAngle, minPolarAngle,maxPolarAngle })\n      Orbiter.update()\n    }\n  }\n","( function () {\n\n\t// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n\t//\n\t//    Orbit - left mouse / touch: one-finger move\n\t//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n\t//    Pan - right mouse, or left mouse + ctrl/meta/shiftKey, or arrow keys / touch: two-finger move\n\n\tconst _changeEvent = {\n\t\ttype: 'change'\n\t};\n\tconst _startEvent = {\n\t\ttype: 'start'\n\t};\n\tconst _endEvent = {\n\t\ttype: 'end'\n\t};\n\n\tclass OrbitControls extends THREE.EventDispatcher {\n\n\t\tconstructor( object, domElement ) {\n\n\t\t\tsuper();\n\t\t\tthis.object = object;\n\t\t\tthis.domElement = domElement;\n\t\t\tthis.domElement.style.touchAction = 'none'; // disable touch scroll\n\t\t\t// Set to false to disable this control\n\n\t\t\tthis.enabled = true; // \"target\" sets the location of focus, where the object orbits around\n\n\t\t\tthis.target = new THREE.Vector3(); // How far you can dolly in and out ( PerspectiveCamera only )\n\n\t\t\tthis.minDistance = 0;\n\t\t\tthis.maxDistance = Infinity; // How far you can zoom in and out ( OrthographicCamera only )\n\n\t\t\tthis.minZoom = 0;\n\t\t\tthis.maxZoom = Infinity; // How far you can orbit vertically, upper and lower limits.\n\t\t\t// Range is 0 to Math.PI radians.\n\n\t\t\tthis.minPolarAngle = 0; // radians\n\n\t\t\tthis.maxPolarAngle = Math.PI; // radians\n\t\t\t// How far you can orbit horizontally, upper and lower limits.\n\t\t\t// If set, the interval [ min, max ] must be a sub-interval of [ - 2 PI, 2 PI ], with ( max - min < 2 PI )\n\n\t\t\tthis.minAzimuthAngle = - Infinity; // radians\n\n\t\t\tthis.maxAzimuthAngle = Infinity; // radians\n\t\t\t// Set to true to enable damping (inertia)\n\t\t\t// If damping is enabled, you must call controls.update() in your animation loop\n\n\t\t\tthis.enableDamping = false;\n\t\t\tthis.dampingFactor = 0.05; // This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n\t\t\t// Set to false to disable zooming\n\n\t\t\tthis.enableZoom = true;\n\t\t\tthis.zoomSpeed = 1.0; // Set to false to disable rotating\n\n\t\t\tthis.enableRotate = true;\n\t\t\tthis.rotateSpeed = 1.0; // Set to false to disable panning\n\n\t\t\tthis.enablePan = true;\n\t\t\tthis.panSpeed = 1.0;\n\t\t\tthis.screenSpacePanning = true; // if false, pan orthogonal to world-space direction camera.up\n\n\t\t\tthis.keyPanSpeed = 7.0; // pixels moved per arrow key push\n\t\t\t// Set to true to automatically rotate around the target\n\t\t\t// If auto-rotate is enabled, you must call controls.update() in your animation loop\n\n\t\t\tthis.autoRotate = false;\n\t\t\tthis.autoRotateSpeed = 2.0; // 30 seconds per orbit when fps is 60\n\t\t\t// The four arrow keys\n\n\t\t\tthis.keys = {\n\t\t\t\tLEFT: 'ArrowLeft',\n\t\t\t\tUP: 'ArrowUp',\n\t\t\t\tRIGHT: 'ArrowRight',\n\t\t\t\tBOTTOM: 'ArrowDown'\n\t\t\t}; // Mouse buttons\n\n\t\t\tthis.mouseButtons = {\n\t\t\t\tLEFT: THREE.MOUSE.ROTATE,\n\t\t\t\tMIDDLE: THREE.MOUSE.DOLLY,\n\t\t\t\tRIGHT: THREE.MOUSE.PAN\n\t\t\t}; // Touch fingers\n\n\t\t\tthis.touches = {\n\t\t\t\tONE: THREE.TOUCH.ROTATE,\n\t\t\t\tTWO: THREE.TOUCH.DOLLY_PAN\n\t\t\t}; // for reset\n\n\t\t\tthis.target0 = this.target.clone();\n\t\t\tthis.position0 = this.object.position.clone();\n\t\t\tthis.zoom0 = this.object.zoom; // the target DOM element for key events\n\n\t\t\tthis._domElementKeyEvents = null; //\n\t\t\t// public methods\n\t\t\t//\n\n\t\t\tthis.getPolarAngle = function () {\n\n\t\t\t\treturn spherical.phi;\n\n\t\t\t};\n\n\t\t\tthis.getAzimuthalAngle = function () {\n\n\t\t\t\treturn spherical.theta;\n\n\t\t\t};\n\n\t\t\tthis.getDistance = function () {\n\n\t\t\t\treturn this.object.position.distanceTo( this.target );\n\n\t\t\t};\n\n\t\t\tthis.listenToKeyEvents = function ( domElement ) {\n\n\t\t\t\tdomElement.addEventListener( 'keydown', onKeyDown );\n\t\t\t\tthis._domElementKeyEvents = domElement;\n\n\t\t\t};\n\n\t\t\tthis.saveState = function () {\n\n\t\t\t\tscope.target0.copy( scope.target );\n\t\t\t\tscope.position0.copy( scope.object.position );\n\t\t\t\tscope.zoom0 = scope.object.zoom;\n\n\t\t\t};\n\n\t\t\tthis.reset = function () {\n\n\t\t\t\tscope.target.copy( scope.target0 );\n\t\t\t\tscope.object.position.copy( scope.position0 );\n\t\t\t\tscope.object.zoom = scope.zoom0;\n\t\t\t\tscope.object.updateProjectionMatrix();\n\t\t\t\tscope.dispatchEvent( _changeEvent );\n\t\t\t\tscope.update();\n\t\t\t\tstate = STATE.NONE;\n\n\t\t\t}; // this method is exposed, but perhaps it would be better if we can make it private...\n\n\n\t\t\tthis.update = function () {\n\n\t\t\t\tconst offset = new THREE.Vector3(); // so camera.up is the orbit axis\n\n\t\t\t\tconst quat = new THREE.Quaternion().setFromUnitVectors( object.up, new THREE.Vector3( 0, 1, 0 ) );\n\t\t\t\tconst quatInverse = quat.clone().invert();\n\t\t\t\tconst lastPosition = new THREE.Vector3();\n\t\t\t\tconst lastQuaternion = new THREE.Quaternion();\n\t\t\t\tconst twoPI = 2 * Math.PI;\n\t\t\t\treturn function update() {\n\n\t\t\t\t\tconst position = scope.object.position;\n\t\t\t\t\toffset.copy( position ).sub( scope.target ); // rotate offset to \"y-axis-is-up\" space\n\n\t\t\t\t\toffset.applyQuaternion( quat ); // angle from z-axis around y-axis\n\n\t\t\t\t\tspherical.setFromVector3( offset );\n\n\t\t\t\t\tif ( scope.autoRotate && state === STATE.NONE ) {\n\n\t\t\t\t\t\trotateLeft( getAutoRotationAngle() );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( scope.enableDamping ) {\n\n\t\t\t\t\t\tspherical.theta += sphericalDelta.theta * scope.dampingFactor;\n\t\t\t\t\t\tspherical.phi += sphericalDelta.phi * scope.dampingFactor;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tspherical.theta += sphericalDelta.theta;\n\t\t\t\t\t\tspherical.phi += sphericalDelta.phi;\n\n\t\t\t\t\t} // restrict theta to be between desired limits\n\n\n\t\t\t\t\tlet min = scope.minAzimuthAngle;\n\t\t\t\t\tlet max = scope.maxAzimuthAngle;\n\n\t\t\t\t\tif ( isFinite( min ) && isFinite( max ) ) {\n\n\t\t\t\t\t\tif ( min < - Math.PI ) min += twoPI; else if ( min > Math.PI ) min -= twoPI;\n\t\t\t\t\t\tif ( max < - Math.PI ) max += twoPI; else if ( max > Math.PI ) max -= twoPI;\n\n\t\t\t\t\t\tif ( min <= max ) {\n\n\t\t\t\t\t\t\tspherical.theta = Math.max( min, Math.min( max, spherical.theta ) );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tspherical.theta = spherical.theta > ( min + max ) / 2 ? Math.max( min, spherical.theta ) : Math.min( max, spherical.theta );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} // restrict phi to be between desired limits\n\n\n\t\t\t\t\tspherical.phi = Math.max( scope.minPolarAngle, Math.min( scope.maxPolarAngle, spherical.phi ) );\n\t\t\t\t\tspherical.makeSafe();\n\t\t\t\t\tspherical.radius *= scale; // restrict radius to be between desired limits\n\n\t\t\t\t\tspherical.radius = Math.max( scope.minDistance, Math.min( scope.maxDistance, spherical.radius ) ); // move target to panned location\n\n\t\t\t\t\tif ( scope.enableDamping === true ) {\n\n\t\t\t\t\t\tscope.target.addScaledVector( panOffset, scope.dampingFactor );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tscope.target.add( panOffset );\n\n\t\t\t\t\t}\n\n\t\t\t\t\toffset.setFromSpherical( spherical ); // rotate offset back to \"camera-up-vector-is-up\" space\n\n\t\t\t\t\toffset.applyQuaternion( quatInverse );\n\t\t\t\t\tposition.copy( scope.target ).add( offset );\n\t\t\t\t\tscope.object.lookAt( scope.target );\n\n\t\t\t\t\tif ( scope.enableDamping === true ) {\n\n\t\t\t\t\t\tsphericalDelta.theta *= 1 - scope.dampingFactor;\n\t\t\t\t\t\tsphericalDelta.phi *= 1 - scope.dampingFactor;\n\t\t\t\t\t\tpanOffset.multiplyScalar( 1 - scope.dampingFactor );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tsphericalDelta.set( 0, 0, 0 );\n\t\t\t\t\t\tpanOffset.set( 0, 0, 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tscale = 1; // update condition is:\n\t\t\t\t\t// min(camera displacement, camera rotation in radians)^2 > EPS\n\t\t\t\t\t// using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n\t\t\t\t\tif ( zoomChanged || lastPosition.distanceToSquared( scope.object.position ) > EPS || 8 * ( 1 - lastQuaternion.dot( scope.object.quaternion ) ) > EPS ) {\n\n\t\t\t\t\t\tscope.dispatchEvent( _changeEvent );\n\t\t\t\t\t\tlastPosition.copy( scope.object.position );\n\t\t\t\t\t\tlastQuaternion.copy( scope.object.quaternion );\n\t\t\t\t\t\tzoomChanged = false;\n\t\t\t\t\t\treturn true;\n\n\t\t\t\t\t}\n\n\t\t\t\t\treturn false;\n\n\t\t\t\t};\n\n\t\t\t}();\n\n\t\t\tthis.dispose = function () {\n\n\t\t\t\tscope.domElement.removeEventListener( 'contextmenu', onContextMenu );\n\t\t\t\tscope.domElement.removeEventListener( 'pointerdown', onPointerDown );\n\t\t\t\tscope.domElement.removeEventListener( 'pointercancel', onPointerCancel );\n\t\t\t\tscope.domElement.removeEventListener( 'wheel', onMouseWheel );\n\t\t\t\tscope.domElement.removeEventListener( 'pointermove', onPointerMove );\n\t\t\t\tscope.domElement.removeEventListener( 'pointerup', onPointerUp );\n\n\t\t\t\tif ( scope._domElementKeyEvents !== null ) {\n\n\t\t\t\t\tscope._domElementKeyEvents.removeEventListener( 'keydown', onKeyDown );\n\n\t\t\t\t} //scope.dispatchEvent( { type: 'dispose' } ); // should this be added here?\n\n\t\t\t}; //\n\t\t\t// internals\n\t\t\t//\n\n\n\t\t\tconst scope = this;\n\t\t\tconst STATE = {\n\t\t\t\tNONE: - 1,\n\t\t\t\tROTATE: 0,\n\t\t\t\tDOLLY: 1,\n\t\t\t\tPAN: 2,\n\t\t\t\tTOUCH_ROTATE: 3,\n\t\t\t\tTOUCH_PAN: 4,\n\t\t\t\tTOUCH_DOLLY_PAN: 5,\n\t\t\t\tTOUCH_DOLLY_ROTATE: 6\n\t\t\t};\n\t\t\tlet state = STATE.NONE;\n\t\t\tconst EPS = 0.000001; // current position in spherical coordinates\n\n\t\t\tconst spherical = new THREE.Spherical();\n\t\t\tconst sphericalDelta = new THREE.Spherical();\n\t\t\tlet scale = 1;\n\t\t\tconst panOffset = new THREE.Vector3();\n\t\t\tlet zoomChanged = false;\n\t\t\tconst rotateStart = new THREE.Vector2();\n\t\t\tconst rotateEnd = new THREE.Vector2();\n\t\t\tconst rotateDelta = new THREE.Vector2();\n\t\t\tconst panStart = new THREE.Vector2();\n\t\t\tconst panEnd = new THREE.Vector2();\n\t\t\tconst panDelta = new THREE.Vector2();\n\t\t\tconst dollyStart = new THREE.Vector2();\n\t\t\tconst dollyEnd = new THREE.Vector2();\n\t\t\tconst dollyDelta = new THREE.Vector2();\n\t\t\tconst pointers = [];\n\t\t\tconst pointerPositions = {};\n\n\t\t\tfunction getAutoRotationAngle() {\n\n\t\t\t\treturn 2 * Math.PI / 60 / 60 * scope.autoRotateSpeed;\n\n\t\t\t}\n\n\t\t\tfunction getZoomScale() {\n\n\t\t\t\treturn Math.pow( 0.95, scope.zoomSpeed );\n\n\t\t\t}\n\n\t\t\tfunction rotateLeft( angle ) {\n\n\t\t\t\tsphericalDelta.theta -= angle;\n\n\t\t\t}\n\n\t\t\tfunction rotateUp( angle ) {\n\n\t\t\t\tsphericalDelta.phi -= angle;\n\n\t\t\t}\n\n\t\t\tconst panLeft = function () {\n\n\t\t\t\tconst v = new THREE.Vector3();\n\t\t\t\treturn function panLeft( distance, objectMatrix ) {\n\n\t\t\t\t\tv.setFromMatrixColumn( objectMatrix, 0 ); // get X column of objectMatrix\n\n\t\t\t\t\tv.multiplyScalar( - distance );\n\t\t\t\t\tpanOffset.add( v );\n\n\t\t\t\t};\n\n\t\t\t}();\n\n\t\t\tconst panUp = function () {\n\n\t\t\t\tconst v = new THREE.Vector3();\n\t\t\t\treturn function panUp( distance, objectMatrix ) {\n\n\t\t\t\t\tif ( scope.screenSpacePanning === true ) {\n\n\t\t\t\t\t\tv.setFromMatrixColumn( objectMatrix, 1 );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tv.setFromMatrixColumn( objectMatrix, 0 );\n\t\t\t\t\t\tv.crossVectors( scope.object.up, v );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tv.multiplyScalar( distance );\n\t\t\t\t\tpanOffset.add( v );\n\n\t\t\t\t};\n\n\t\t\t}(); // deltaX and deltaY are in pixels; right and down are positive\n\n\n\t\t\tconst pan = function () {\n\n\t\t\t\tconst offset = new THREE.Vector3();\n\t\t\t\treturn function pan( deltaX, deltaY ) {\n\n\t\t\t\t\tconst element = scope.domElement;\n\n\t\t\t\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\t\t\t\t// perspective\n\t\t\t\t\t\tconst position = scope.object.position;\n\t\t\t\t\t\toffset.copy( position ).sub( scope.target );\n\t\t\t\t\t\tlet targetDistance = offset.length(); // half of the fov is center to top of screen\n\n\t\t\t\t\t\ttargetDistance *= Math.tan( scope.object.fov / 2 * Math.PI / 180.0 ); // we use only clientHeight here so aspect ratio does not distort speed\n\n\t\t\t\t\t\tpanLeft( 2 * deltaX * targetDistance / element.clientHeight, scope.object.matrix );\n\t\t\t\t\t\tpanUp( 2 * deltaY * targetDistance / element.clientHeight, scope.object.matrix );\n\n\t\t\t\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\t\t\t\t// orthographic\n\t\t\t\t\t\tpanLeft( deltaX * ( scope.object.right - scope.object.left ) / scope.object.zoom / element.clientWidth, scope.object.matrix );\n\t\t\t\t\t\tpanUp( deltaY * ( scope.object.top - scope.object.bottom ) / scope.object.zoom / element.clientHeight, scope.object.matrix );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// camera neither orthographic nor perspective\n\t\t\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.' );\n\t\t\t\t\t\tscope.enablePan = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t};\n\n\t\t\t}();\n\n\t\t\tfunction dollyOut( dollyScale ) {\n\n\t\t\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\t\t\tscale /= dollyScale;\n\n\t\t\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom * dollyScale ) );\n\t\t\t\t\tscope.object.updateProjectionMatrix();\n\t\t\t\t\tzoomChanged = true;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\t\t\tscope.enableZoom = false;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction dollyIn( dollyScale ) {\n\n\t\t\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\t\t\tscale *= dollyScale;\n\n\t\t\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom / dollyScale ) );\n\t\t\t\t\tscope.object.updateProjectionMatrix();\n\t\t\t\t\tzoomChanged = true;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\t\t\tscope.enableZoom = false;\n\n\t\t\t\t}\n\n\t\t\t} //\n\t\t\t// event callbacks - update the object state\n\t\t\t//\n\n\n\t\t\tfunction handleMouseDownRotate( event ) {\n\n\t\t\t\trotateStart.set( event.clientX, event.clientY );\n\n\t\t\t}\n\n\t\t\tfunction handleMouseDownDolly( event ) {\n\n\t\t\t\tdollyStart.set( event.clientX, event.clientY );\n\n\t\t\t}\n\n\t\t\tfunction handleMouseDownPan( event ) {\n\n\t\t\t\tpanStart.set( event.clientX, event.clientY );\n\n\t\t\t}\n\n\t\t\tfunction handleMouseMoveRotate( event ) {\n\n\t\t\t\trotateEnd.set( event.clientX, event.clientY );\n\t\t\t\trotateDelta.subVectors( rotateEnd, rotateStart ).multiplyScalar( scope.rotateSpeed );\n\t\t\t\tconst element = scope.domElement;\n\t\t\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientHeight ); // yes, height\n\n\t\t\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight );\n\t\t\t\trotateStart.copy( rotateEnd );\n\t\t\t\tscope.update();\n\n\t\t\t}\n\n\t\t\tfunction handleMouseMoveDolly( event ) {\n\n\t\t\t\tdollyEnd.set( event.clientX, event.clientY );\n\t\t\t\tdollyDelta.subVectors( dollyEnd, dollyStart );\n\n\t\t\t\tif ( dollyDelta.y > 0 ) {\n\n\t\t\t\t\tdollyOut( getZoomScale() );\n\n\t\t\t\t} else if ( dollyDelta.y < 0 ) {\n\n\t\t\t\t\tdollyIn( getZoomScale() );\n\n\t\t\t\t}\n\n\t\t\t\tdollyStart.copy( dollyEnd );\n\t\t\t\tscope.update();\n\n\t\t\t}\n\n\t\t\tfunction handleMouseMovePan( event ) {\n\n\t\t\t\tpanEnd.set( event.clientX, event.clientY );\n\t\t\t\tpanDelta.subVectors( panEnd, panStart ).multiplyScalar( scope.panSpeed );\n\t\t\t\tpan( panDelta.x, panDelta.y );\n\t\t\t\tpanStart.copy( panEnd );\n\t\t\t\tscope.update();\n\n\t\t\t}\n\n\t\t\tfunction handleMouseWheel( event ) {\n\n\t\t\t\tif ( event.deltaY < 0 ) {\n\n\t\t\t\t\tdollyIn( getZoomScale() );\n\n\t\t\t\t} else if ( event.deltaY > 0 ) {\n\n\t\t\t\t\tdollyOut( getZoomScale() );\n\n\t\t\t\t}\n\n\t\t\t\tscope.update();\n\n\t\t\t}\n\n\t\t\tfunction handleKeyDown( event ) {\n\n\t\t\t\tlet needsUpdate = false;\n\n\t\t\t\tswitch ( event.code ) {\n\n\t\t\t\t\tcase scope.keys.UP:\n\t\t\t\t\t\tpan( 0, scope.keyPanSpeed );\n\t\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase scope.keys.BOTTOM:\n\t\t\t\t\t\tpan( 0, - scope.keyPanSpeed );\n\t\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase scope.keys.LEFT:\n\t\t\t\t\t\tpan( scope.keyPanSpeed, 0 );\n\t\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase scope.keys.RIGHT:\n\t\t\t\t\t\tpan( - scope.keyPanSpeed, 0 );\n\t\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t\tif ( needsUpdate ) {\n\n\t\t\t\t\t// prevent the browser from scrolling on cursor keys\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\tscope.update();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction handleTouchStartRotate() {\n\n\t\t\t\tif ( pointers.length === 1 ) {\n\n\t\t\t\t\trotateStart.set( pointers[ 0 ].pageX, pointers[ 0 ].pageY );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconst x = 0.5 * ( pointers[ 0 ].pageX + pointers[ 1 ].pageX );\n\t\t\t\t\tconst y = 0.5 * ( pointers[ 0 ].pageY + pointers[ 1 ].pageY );\n\t\t\t\t\trotateStart.set( x, y );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction handleTouchStartPan() {\n\n\t\t\t\tif ( pointers.length === 1 ) {\n\n\t\t\t\t\tpanStart.set( pointers[ 0 ].pageX, pointers[ 0 ].pageY );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconst x = 0.5 * ( pointers[ 0 ].pageX + pointers[ 1 ].pageX );\n\t\t\t\t\tconst y = 0.5 * ( pointers[ 0 ].pageY + pointers[ 1 ].pageY );\n\t\t\t\t\tpanStart.set( x, y );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction handleTouchStartDolly() {\n\n\t\t\t\tconst dx = pointers[ 0 ].pageX - pointers[ 1 ].pageX;\n\t\t\t\tconst dy = pointers[ 0 ].pageY - pointers[ 1 ].pageY;\n\t\t\t\tconst distance = Math.sqrt( dx * dx + dy * dy );\n\t\t\t\tdollyStart.set( 0, distance );\n\n\t\t\t}\n\n\t\t\tfunction handleTouchStartDollyPan() {\n\n\t\t\t\tif ( scope.enableZoom ) handleTouchStartDolly();\n\t\t\t\tif ( scope.enablePan ) handleTouchStartPan();\n\n\t\t\t}\n\n\t\t\tfunction handleTouchStartDollyRotate() {\n\n\t\t\t\tif ( scope.enableZoom ) handleTouchStartDolly();\n\t\t\t\tif ( scope.enableRotate ) handleTouchStartRotate();\n\n\t\t\t}\n\n\t\t\tfunction handleTouchMoveRotate( event ) {\n\n\t\t\t\tif ( pointers.length == 1 ) {\n\n\t\t\t\t\trotateEnd.set( event.pageX, event.pageY );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconst position = getSecondPointerPosition( event );\n\t\t\t\t\tconst x = 0.5 * ( event.pageX + position.x );\n\t\t\t\t\tconst y = 0.5 * ( event.pageY + position.y );\n\t\t\t\t\trotateEnd.set( x, y );\n\n\t\t\t\t}\n\n\t\t\t\trotateDelta.subVectors( rotateEnd, rotateStart ).multiplyScalar( scope.rotateSpeed );\n\t\t\t\tconst element = scope.domElement;\n\t\t\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientHeight ); // yes, height\n\n\t\t\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight );\n\t\t\t\trotateStart.copy( rotateEnd );\n\n\t\t\t}\n\n\t\t\tfunction handleTouchMovePan( event ) {\n\n\t\t\t\tif ( pointers.length === 1 ) {\n\n\t\t\t\t\tpanEnd.set( event.pageX, event.pageY );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconst position = getSecondPointerPosition( event );\n\t\t\t\t\tconst x = 0.5 * ( event.pageX + position.x );\n\t\t\t\t\tconst y = 0.5 * ( event.pageY + position.y );\n\t\t\t\t\tpanEnd.set( x, y );\n\n\t\t\t\t}\n\n\t\t\t\tpanDelta.subVectors( panEnd, panStart ).multiplyScalar( scope.panSpeed );\n\t\t\t\tpan( panDelta.x, panDelta.y );\n\t\t\t\tpanStart.copy( panEnd );\n\n\t\t\t}\n\n\t\t\tfunction handleTouchMoveDolly( event ) {\n\n\t\t\t\tconst position = getSecondPointerPosition( event );\n\t\t\t\tconst dx = event.pageX - position.x;\n\t\t\t\tconst dy = event.pageY - position.y;\n\t\t\t\tconst distance = Math.sqrt( dx * dx + dy * dy );\n\t\t\t\tdollyEnd.set( 0, distance );\n\t\t\t\tdollyDelta.set( 0, Math.pow( dollyEnd.y / dollyStart.y, scope.zoomSpeed ) );\n\t\t\t\tdollyOut( dollyDelta.y );\n\t\t\t\tdollyStart.copy( dollyEnd );\n\n\t\t\t}\n\n\t\t\tfunction handleTouchMoveDollyPan( event ) {\n\n\t\t\t\tif ( scope.enableZoom ) handleTouchMoveDolly( event );\n\t\t\t\tif ( scope.enablePan ) handleTouchMovePan( event );\n\n\t\t\t}\n\n\t\t\tfunction handleTouchMoveDollyRotate( event ) {\n\n\t\t\t\tif ( scope.enableZoom ) handleTouchMoveDolly( event );\n\t\t\t\tif ( scope.enableRotate ) handleTouchMoveRotate( event );\n\n\t\t\t} //\n\t\t\t// event handlers - FSM: listen for events and reset state\n\t\t\t//\n\n\n\t\t\tfunction onPointerDown( event ) {\n\n\t\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\t\tif ( pointers.length === 0 ) {\n\n\t\t\t\t\tscope.domElement.setPointerCapture( event.pointerId );\n\t\t\t\t\tscope.domElement.addEventListener( 'pointermove', onPointerMove );\n\t\t\t\t\tscope.domElement.addEventListener( 'pointerup', onPointerUp );\n\n\t\t\t\t} //\n\n\n\t\t\t\taddPointer( event );\n\n\t\t\t\tif ( event.pointerType === 'touch' ) {\n\n\t\t\t\t\tonTouchStart( event );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tonMouseDown( event );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction onPointerMove( event ) {\n\n\t\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\t\tif ( event.pointerType === 'touch' ) {\n\n\t\t\t\t\tonTouchMove( event );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tonMouseMove( event );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction onPointerUp( event ) {\n\n\t\t\t\tremovePointer( event );\n\n\t\t\t\tif ( pointers.length === 0 ) {\n\n\t\t\t\t\tscope.domElement.releasePointerCapture( event.pointerId );\n\t\t\t\t\tscope.domElement.removeEventListener( 'pointermove', onPointerMove );\n\t\t\t\t\tscope.domElement.removeEventListener( 'pointerup', onPointerUp );\n\n\t\t\t\t}\n\n\t\t\t\tscope.dispatchEvent( _endEvent );\n\t\t\t\tstate = STATE.NONE;\n\n\t\t\t}\n\n\t\t\tfunction onPointerCancel( event ) {\n\n\t\t\t\tremovePointer( event );\n\n\t\t\t}\n\n\t\t\tfunction onMouseDown( event ) {\n\n\t\t\t\tlet mouseAction;\n\n\t\t\t\tswitch ( event.button ) {\n\n\t\t\t\t\tcase 0:\n\t\t\t\t\t\tmouseAction = scope.mouseButtons.LEFT;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\tmouseAction = scope.mouseButtons.MIDDLE;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 2:\n\t\t\t\t\t\tmouseAction = scope.mouseButtons.RIGHT;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tmouseAction = - 1;\n\n\t\t\t\t}\n\n\t\t\t\tswitch ( mouseAction ) {\n\n\t\t\t\t\tcase THREE.MOUSE.DOLLY:\n\t\t\t\t\t\tif ( scope.enableZoom === false ) return;\n\t\t\t\t\t\thandleMouseDownDolly( event );\n\t\t\t\t\t\tstate = STATE.DOLLY;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase THREE.MOUSE.ROTATE:\n\t\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\t\tif ( scope.enablePan === false ) return;\n\t\t\t\t\t\t\thandleMouseDownPan( event );\n\t\t\t\t\t\t\tstate = STATE.PAN;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\t\t\t\t\t\t\thandleMouseDownRotate( event );\n\t\t\t\t\t\t\tstate = STATE.ROTATE;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase THREE.MOUSE.PAN:\n\t\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\t\t\t\t\t\t\thandleMouseDownRotate( event );\n\t\t\t\t\t\t\tstate = STATE.ROTATE;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( scope.enablePan === false ) return;\n\t\t\t\t\t\t\thandleMouseDownPan( event );\n\t\t\t\t\t\t\tstate = STATE.PAN;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t\t}\n\n\t\t\t\tif ( state !== STATE.NONE ) {\n\n\t\t\t\t\tscope.dispatchEvent( _startEvent );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction onMouseMove( event ) {\n\n\t\t\t\tswitch ( state ) {\n\n\t\t\t\t\tcase STATE.ROTATE:\n\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\t\t\t\t\t\thandleMouseMoveRotate( event );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase STATE.DOLLY:\n\t\t\t\t\t\tif ( scope.enableZoom === false ) return;\n\t\t\t\t\t\thandleMouseMoveDolly( event );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase STATE.PAN:\n\t\t\t\t\t\tif ( scope.enablePan === false ) return;\n\t\t\t\t\t\thandleMouseMovePan( event );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction onMouseWheel( event ) {\n\n\t\t\t\tif ( scope.enabled === false || scope.enableZoom === false || state !== STATE.NONE ) return;\n\t\t\t\tevent.preventDefault();\n\t\t\t\tscope.dispatchEvent( _startEvent );\n\t\t\t\thandleMouseWheel( event );\n\t\t\t\tscope.dispatchEvent( _endEvent );\n\n\t\t\t}\n\n\t\t\tfunction onKeyDown( event ) {\n\n\t\t\t\tif ( scope.enabled === false || scope.enablePan === false ) return;\n\t\t\t\thandleKeyDown( event );\n\n\t\t\t}\n\n\t\t\tfunction onTouchStart( event ) {\n\n\t\t\t\ttrackPointer( event );\n\n\t\t\t\tswitch ( pointers.length ) {\n\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\tswitch ( scope.touches.ONE ) {\n\n\t\t\t\t\t\t\tcase THREE.TOUCH.ROTATE:\n\t\t\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\t\t\t\t\t\t\t\thandleTouchStartRotate();\n\t\t\t\t\t\t\t\tstate = STATE.TOUCH_ROTATE;\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase THREE.TOUCH.PAN:\n\t\t\t\t\t\t\t\tif ( scope.enablePan === false ) return;\n\t\t\t\t\t\t\t\thandleTouchStartPan();\n\t\t\t\t\t\t\t\tstate = STATE.TOUCH_PAN;\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 2:\n\t\t\t\t\t\tswitch ( scope.touches.TWO ) {\n\n\t\t\t\t\t\t\tcase THREE.TOUCH.DOLLY_PAN:\n\t\t\t\t\t\t\t\tif ( scope.enableZoom === false && scope.enablePan === false ) return;\n\t\t\t\t\t\t\t\thandleTouchStartDollyPan();\n\t\t\t\t\t\t\t\tstate = STATE.TOUCH_DOLLY_PAN;\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase THREE.TOUCH.DOLLY_ROTATE:\n\t\t\t\t\t\t\t\tif ( scope.enableZoom === false && scope.enableRotate === false ) return;\n\t\t\t\t\t\t\t\thandleTouchStartDollyRotate();\n\t\t\t\t\t\t\t\tstate = STATE.TOUCH_DOLLY_ROTATE;\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t\t}\n\n\t\t\t\tif ( state !== STATE.NONE ) {\n\n\t\t\t\t\tscope.dispatchEvent( _startEvent );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction onTouchMove( event ) {\n\n\t\t\t\ttrackPointer( event );\n\n\t\t\t\tswitch ( state ) {\n\n\t\t\t\t\tcase STATE.TOUCH_ROTATE:\n\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\t\t\t\t\t\thandleTouchMoveRotate( event );\n\t\t\t\t\t\tscope.update();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase STATE.TOUCH_PAN:\n\t\t\t\t\t\tif ( scope.enablePan === false ) return;\n\t\t\t\t\t\thandleTouchMovePan( event );\n\t\t\t\t\t\tscope.update();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase STATE.TOUCH_DOLLY_PAN:\n\t\t\t\t\t\tif ( scope.enableZoom === false && scope.enablePan === false ) return;\n\t\t\t\t\t\thandleTouchMoveDollyPan( event );\n\t\t\t\t\t\tscope.update();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase STATE.TOUCH_DOLLY_ROTATE:\n\t\t\t\t\t\tif ( scope.enableZoom === false && scope.enableRotate === false ) return;\n\t\t\t\t\t\thandleTouchMoveDollyRotate( event );\n\t\t\t\t\t\tscope.update();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction onContextMenu( event ) {\n\n\t\t\t\tif ( scope.enabled === false ) return;\n\t\t\t\tevent.preventDefault();\n\n\t\t\t}\n\n\t\t\tfunction addPointer( event ) {\n\n\t\t\t\tpointers.push( event );\n\n\t\t\t}\n\n\t\t\tfunction removePointer( event ) {\n\n\t\t\t\tdelete pointerPositions[ event.pointerId ];\n\n\t\t\t\tfor ( let i = 0; i < pointers.length; i ++ ) {\n\n\t\t\t\t\tif ( pointers[ i ].pointerId == event.pointerId ) {\n\n\t\t\t\t\t\tpointers.splice( i, 1 );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction trackPointer( event ) {\n\n\t\t\t\tlet position = pointerPositions[ event.pointerId ];\n\n\t\t\t\tif ( position === undefined ) {\n\n\t\t\t\t\tposition = new THREE.Vector2();\n\t\t\t\t\tpointerPositions[ event.pointerId ] = position;\n\n\t\t\t\t}\n\n\t\t\t\tposition.set( event.pageX, event.pageY );\n\n\t\t\t}\n\n\t\t\tfunction getSecondPointerPosition( event ) {\n\n\t\t\t\tconst pointer = event.pointerId === pointers[ 0 ].pointerId ? pointers[ 1 ] : pointers[ 0 ];\n\t\t\t\treturn pointerPositions[ pointer.pointerId ];\n\n\t\t\t} //\n\n\n\t\t\tscope.domElement.addEventListener( 'contextmenu', onContextMenu );\n\t\t\tscope.domElement.addEventListener( 'pointerdown', onPointerDown );\n\t\t\tscope.domElement.addEventListener( 'pointercancel', onPointerCancel );\n\t\t\tscope.domElement.addEventListener( 'wheel', onMouseWheel, {\n\t\t\t\tpassive: false\n\t\t\t} ); // force an update at start\n\n\t\t\tthis.update();\n\n\t\t}\n\n\t} // This set of controls performs orbiting, dollying (zooming), and panning.\n\t// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n\t// This is very similar to OrbitControls, another set of touch behavior\n\t//\n\t//    Orbit - right mouse, or left mouse + ctrl/meta/shiftKey / touch: two-finger rotate\n\t//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n\t//    Pan - left mouse, or arrow keys / touch: one-finger move\n\n\n\tclass MapControls extends OrbitControls {\n\n\t\tconstructor( object, domElement ) {\n\n\t\t\tsuper( object, domElement );\n\t\t\tthis.screenSpacePanning = false; // pan orthogonal to world-space direction camera.up\n\n\t\t\tthis.mouseButtons.LEFT = THREE.MOUSE.PAN;\n\t\t\tthis.mouseButtons.RIGHT = THREE.MOUSE.ROTATE;\n\t\t\tthis.touches.ONE = THREE.TOUCH.PAN;\n\t\t\tthis.touches.TWO = THREE.TOUCH.DOLLY_ROTATE;\n\n\t\t}\n\n\t}\n\n\tTHREE.MapControls = MapControls;\n\tTHREE.OrbitControls = OrbitControls;\n\n} )();\n"],"names":["KeyEventListener","Event","Orbiter","this","OrbitControls","Delta","Math","PI","key","Camera","position","copy","data","update","rotateBy","shiftKey","horizontalAngle","verticalAngle","minAzimuthAngle","maxAzimuthAngle","minPolarAngle","maxPolarAngle","getAzimuthalAngle","getPolarAngle","Object","assign","_changeEvent","type","_startEvent","_endEvent","THREE","EventDispatcher","constructor","object","domElement","super","style","touchAction","enabled","target","Vector3","minDistance","maxDistance","Infinity","minZoom","maxZoom","enableDamping","dampingFactor","enableZoom","zoomSpeed","enableRotate","rotateSpeed","enablePan","panSpeed","screenSpacePanning","keyPanSpeed","autoRotate","autoRotateSpeed","keys","LEFT","UP","RIGHT","BOTTOM","mouseButtons","MOUSE","ROTATE","MIDDLE","DOLLY","PAN","touches","ONE","TOUCH","TWO","DOLLY_PAN","target0","clone","position0","zoom0","zoom","_domElementKeyEvents","spherical","phi","theta","getDistance","distanceTo","listenToKeyEvents","addEventListener","onKeyDown","saveState","scope","reset","updateProjectionMatrix","dispatchEvent","state","STATE","NONE","offset","quat","Quaternion","setFromUnitVectors","up","quatInverse","invert","lastPosition","lastQuaternion","twoPI","sub","applyQuaternion","setFromVector3","rotateLeft","sphericalDelta","min","max","isFinite","makeSafe","radius","scale","addScaledVector","panOffset","add","setFromSpherical","lookAt","multiplyScalar","set","zoomChanged","distanceToSquared","EPS","dot","quaternion","dispose","removeEventListener","onContextMenu","onPointerDown","onPointerCancel","onMouseWheel","onPointerMove","onPointerUp","TOUCH_ROTATE","TOUCH_PAN","TOUCH_DOLLY_PAN","TOUCH_DOLLY_ROTATE","Spherical","rotateStart","Vector2","rotateEnd","rotateDelta","panStart","panEnd","panDelta","dollyStart","dollyEnd","dollyDelta","pointers","pointerPositions","getZoomScale","pow","angle","rotateUp","panLeft","v","distance","objectMatrix","setFromMatrixColumn","panUp","crossVectors","pan","deltaX","deltaY","element","isPerspectiveCamera","targetDistance","length","tan","fov","clientHeight","matrix","isOrthographicCamera","right","left","clientWidth","top","bottom","console","warn","dollyOut","dollyScale","dollyIn","handleMouseDownRotate","event","clientX","clientY","handleMouseDownPan","handleTouchStartRotate","pageX","pageY","x","y","handleTouchStartPan","handleTouchStartDolly","dx","dy","sqrt","handleTouchMoveRotate","getSecondPointerPosition","subVectors","handleTouchMovePan","handleTouchMoveDolly","setPointerCapture","pointerId","push","addPointer","pointerType","trackPointer","DOLLY_ROTATE","onTouchStart","mouseAction","button","handleMouseDownDolly","ctrlKey","metaKey","onMouseDown","handleTouchMoveDollyPan","handleTouchMoveDollyRotate","onTouchMove","handleMouseMoveRotate","handleMouseMoveDolly","handleMouseMovePan","onMouseMove","removePointer","releasePointerCapture","preventDefault","handleMouseWheel","needsUpdate","code","handleKeyDown","i","splice","undefined","pointer","passive","MapControls","AFRAME","components","registerComponent","dependencies","schema","default","z","init","el","sceneEl","setAttribute","getObject3D","renderer","enableKeys","bind","oldData","equals","play","Component","cursor","window","pause","remove"],"mappings":"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"}